create table tb_notice(

	brd_id int auto_increment comment '글 번호', 
	title  varchar(100) not null comment '제목', 
	writer varchar(50) not null comment '글쓴이', 
	contents text not null comment '내용', 
	read_count int default 0 comment '조회수', 
	 
	create_date datetime default now() comment '등록일', 
	update_date datetime default null comment '수정일', 
	
	primary key(brd_id)
);

-- tb_notice 테스트 데이터 삽입
INSERT INTO tb_notice (title, writer, contents) VALUES 
    ('테스트1', '작성자1', '테스트1 내용입니다.'),
    ('테스트2', '작성자2', '테스트2 내용입니다.'),
    ('테스트3', '작성자3', '테스트3 내용입니다.'),
    ('테스트4', '작성자4', '테스트4 내용입니다.'),
    ('테스트5', '작성자5', '테스트5 내용입니다.');

-- Create tb_notice_files table
create table tb_notice_files(
    bf_id int auto_increment comment '파일 번호',
    board_id int not null comment '게시글 번호',
    file_name varchar(255) not null comment '파일 원본 이름',
    stored_name varchar(255) not null comment '파일 저장 이름',
    file_path varchar(255) not null comment '파일 경로',
    file_size bigint not null comment '파일 크기',
    create_date datetime default now() comment '등록일',
    
    primary key(bf_id),
    constraint fk_notice_id foreign key(board_id) references tb_notice(brd_id) on delete cascade
);



drop table if exists tb_users;

create table tb_users(

	user_id varchar(100) not null comment '아이디', 
	passwd varchar(255) not null comment '패스워드', 
	user_name varchar(50) not null comment '이름', 
	birth int not null comment '생년월일', 
	gender varchar(30) not null comment '성별', 
	phone varchar(30) not null comment '전화번호', 
	email varchar(100) not null comment '이메일', 
	addr varchar(255) not null comment '주소', 
	addr_detail varchar(255) default '' comment '상세 주소',
	user_role varchar(50) default 'USER' comment '권한', 
	use_yn char(1) default 'Y' comment '사용 여부: Y, N', 
	del_yn char(1) default 'N' comment '삭제 여부: Y, N', 
	create_date datetime default now() comment '생성일', 
	update_date datetime default null comment '수정일', 
	
	primary key(user_id), 
	constraint user_role_fk foreign key(user_role) references user_role(role_id)
);

alter table tb_users add constraint user_role_fk foreign key(user_role) referencecs user_role(role_id);