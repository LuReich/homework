-- Drop tables if they exist to ensure a clean start
DROP TABLE IF EXISTS tb_notice_files;
DROP TABLE IF EXISTS tb_notice;

-- Create tb_notice table
create table tb_notice(

	brd_id int auto_increment comment '글 번호', 
	title  varchar(100) not null comment '제목', 
	writer varchar(50) not null comment '글쓴이', 
	contents text not null comment '내용', 
	read_count int default 0 comment '조회수', 
	 
	create_date datetime default now() comment '등록일', 
	update_date datetime default null comment '수정일', 
	
	primary key(brd_id)
);

-- Create tb_notice_files table
create table tb_notice_files(
    bf_id int auto_increment comment '파일 번호',
    board_id int not null comment '게시글 번호',
    file_name varchar(255) not null comment '파일 원본 이름',
    stored_name varchar(255) not null comment '파일 저장 이름',
    file_path varchar(255) not null comment '파일 경로',
    file_size bigint not null comment '파일 크기',
    create_date datetime default now() comment '등록일',
    
    primary key(bf_id),
    constraint fk_notice_id foreign key(board_id) references tb_notice(brd_id) on delete cascade
);

-- Insert sample data into tb_notice
INSERT INTO tb_notice(title, writer, contents) VALUES
('테스트 게시글 01', '작성자01', '이것은 테스트 게시글 01의 내용입니다.'),
('테스트 게시글 02', '작성자02', '이것은 테스트 게시글 02의 내용입니다.'),
('테스트 게시글 03', '작성자03', '이것은 테스트 게시글 03의 내용입니다.'),
('테스트 게시글 04', '작성자04', '이것은 테스트 게시글 04의 내용입니다.'),
('테스트 게시글 05', '작성자05', '이것은 테스트 게시글 05의 내용입니다.'),
('테스트 게시글 06', '작성자06', '이것은 테스트 게시글 06의 내용입니다.'),
('테스트 게시글 07', '작성자07', '이것은 테스트 게시글 07의 내용입니다.'),
('테스트 게시글 08', '작성자08', '이것은 테스트 게시글 08의 내용입니다.'),
('테스트 게시글 09', '작성자09', '이것은 테스트 게시글 09의 내용입니다.'),
('테스트 게시글 10', '작성자10', '이것은 테스트 게시글 10의 내용입니다.'),
('테스트 게시글 11', '작성자11', '이것은 테스트 게시글 11의 내용입니다.'),
('테스트 게시글 12', '작성자12', '이것은 테스트 게시글 12의 내용입니다.'),
('테스트 게시글 13', '작성자13', '이것은 테스트 게시글 13의 내용입니다.'),
('테스트 게시글 14', '작성자14', '이것은 테스트 게시글 14의 내용입니다.'),
('테스트 게시글 15', '작성자15', '이것은 테스트 게시글 15의 내용입니다.');


DESCRIBE tb_notice_files;